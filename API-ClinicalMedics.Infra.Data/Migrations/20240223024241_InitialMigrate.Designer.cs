// <auto-generated />
using API_ClinicalMedics.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_ClinicalMedics.Infra.Data.Migrations
{
    [DbContext(typeof(ClinicalsMedicsContext))]
    [Migration("20240223024241_InitialMigrate")]
    partial class InitialMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API_ClinicalMedics.Domain.Entities.Attachaments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContentPDF")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ContentPDF");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FileName");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("TypeDocument")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TypeDocument");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Attachaments", (string)null);
                });

            modelBuilder.Entity("API_ClinicalMedics.Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CPF");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("API_ClinicalMedics.Domain.Entities.Attachaments", b =>
                {
                    b.HasOne("API_ClinicalMedics.Domain.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
