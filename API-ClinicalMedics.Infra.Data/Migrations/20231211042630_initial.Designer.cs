// <auto-generated />
using API_ClinicalMedics.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_ClinicalMedics.Infra.Data.Migrations
{
    [DbContext(typeof(ClinicalsMedicsContext))]
    [Migration("20231211042630_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API_ClinicalMedics.Domain.Entities.Attachaments", b =>
                {
                    b.Property<long>("IdAttachament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContentPDF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdAttachament");

                    b.HasIndex("IdUser");

                    b.ToTable("Attachaments");
                });

            modelBuilder.Entity("API_ClinicalMedics.Domain.Entities.Users", b =>
                {
                    b.Property<long>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_ClinicalMedics.Domain.Entities.Attachaments", b =>
                {
                    b.HasOne("API_ClinicalMedics.Domain.Entities.Users", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
